// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

func (ga *Game) Creator(ctx context.Context) (*User, error) {
	result, err := ga.Edges.CreatorOrErr()
	if IsNotLoaded(err) {
		result, err = ga.QueryCreator().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (ga *Game) GameParticipants(ctx context.Context) (result []*User, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = ga.NamedGameParticipants(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = ga.Edges.GameParticipantsOrErr()
	}
	if IsNotLoaded(err) {
		result, err = ga.QueryGameParticipants().All(ctx)
	}
	return result, err
}

func (u *User) CreatedGames(ctx context.Context) (result []*Game, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = u.NamedCreatedGames(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = u.Edges.CreatedGamesOrErr()
	}
	if IsNotLoaded(err) {
		result, err = u.QueryCreatedGames().All(ctx)
	}
	return result, err
}

func (u *User) ParticipatingGames(ctx context.Context) (result []*Game, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = u.NamedParticipatingGames(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = u.Edges.ParticipatingGamesOrErr()
	}
	if IsNotLoaded(err) {
		result, err = u.QueryParticipatingGames().All(ctx)
	}
	return result, err
}
